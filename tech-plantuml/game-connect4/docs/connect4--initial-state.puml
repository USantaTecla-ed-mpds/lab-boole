@startuml connect4--initial-state


title Connect4. Initial State

object newGame
note left of newGame
    status 0 = not started
    status 1 = started
    status 2 = paused
    status 3 = finished
end note

object goal
object turn
object myBoard
object cellA1
object vilma
object pedro
object redChecker1
object yellowChecker1


object newGame {
    nGame = 0
    status = 0
}

object goal {
    name = '4 in a line'
    status = false
    winner = null
}

object turn {
    firstPlayer = vilma
    turn = 0
    remainingTurns = 42
}

object myBoard {
    columns = 7
    rows = 6
}

note left of myBoard
    7 columns, from A (left) to G (right)
    6 rows, from 1 (bottom) to 6 (top)
end note

object cellA1 {
    coordinates = A1
    filled = false
}

note left of cellA1
    42 equal cells with:
    filled = false,
    and coordinates:
    A6, B6, C6, D6, E6, F6, G6
    A5, B5, C5, D5, E5, F5, G5
    A4, B4, C4, D4, E4, F4, G4
    A3, B3, C3, D3, E3, F3, G3
    A2, B2, C2, D2, E2, F2, G2
    A1, B1, C1, D1, E1, F1, G1
end note

object vilma {
    playerId = 1
    colorCheckers = 'yellow'
    checkers = 21
    usedCheckers = 0
}

object pedro {
    playerId = 2
    colorCheckers = 'red'
    checkers = 21
    usedCheckers = 0
}

object yellowChecker1 {
    id = y1
    position = null
    color = 'yellow'
}

note left of yellowChecker1
    21 equal yellow checkers
    With diferent id, from y1 to y21
end note

object redChecker1 {
    id = r1
    position = null
    color = 'red'
}

note right of redChecker1
    21 equal red checkers
    With diferent id, from r1 to r21
end note

newGame *--> myBoard
myBoard *--> cellA1

vilma ..> yellowChecker1
pedro ..> redChecker1


@enduml


' diagram by Oscar Quintero and Borja Coll ;-)