/***
 *             Connect4 stylesheet
 *      _____                       __  ____
 *     / ___/__  ___  ___  ___ ____/ /_/ / /
 *    / /__/ _ \/ _ \/ _ \/ -_) __/ __/_  _/
 *    \___/\___/_//_/_//_/\__/\__/\__/ /_/  
 *
 *    CSS architecture based in BEMIT methodology,
 *    implemented using cascade layers, open-props and custom reset
 *
 *    See: https://cssguidelin.es/
 *         https://open-props.style/
 *         https://www.joshwcomeau.com/css/custom-css-reset/
 */


/*-----------------------------------------------------------------------------*\
  # LAYERS ORDER
    From lowest to highest priority in cascade. Don't change order!
\*-----------------------------------------------------------------------------*/

@layer settings, settings.open-props, reset, elements, layout, objects, components, utilities;



/*-----------------------------------------------------------------------------*\
  # SETTINGS layer
    only settings like: variables, fonts, colors, breakpoints...
\*-----------------------------------------------------------------------------*/

/* @import url('https://unpkg.com/open-props') layer(settings); */
@layer settings {
  :root {
    --font-size-base: 10px;
    --gradient-board: linear-gradient(var(--blue-3), var(--blue-5));
  }

  @layer open-props {
    :where(html) {
      --font-sans: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
      --font-serif: ui-serif, serif;
      --font-mono: Dank Mono, Operator Mono, Inconsolata, Fira Mono, ui-monospace, SF Mono, Monaco, Droid Sans Mono, Source Code Pro, monospace;
      --font-weight-1: 100;
      --font-weight-2: 200;
      --font-weight-3: 300;
      --font-weight-4: 400;
      --font-weight-5: 500;
      --font-weight-6: 600;
      --font-weight-7: 700;
      --font-weight-8: 800;
      --font-weight-9: 900;
      --font-lineheight-00: .95;
      --font-lineheight-0: 1.1;
      --font-lineheight-1: 1.25;
      --font-lineheight-2: 1.375;
      --font-lineheight-3: 1.5;
      --font-lineheight-4: 1.75;
      --font-lineheight-5: 2;
      --font-letterspacing-0: -.05em;
      --font-letterspacing-1: .025em;
      --font-letterspacing-2: .050em;
      --font-letterspacing-3: .075em;
      --font-letterspacing-4: .150em;
      --font-letterspacing-5: .500em;
      --font-letterspacing-6: .750em;
      --font-letterspacing-7: 1em;
      --font-size-00: .5rem;
      --font-size-0: .75rem;
      --font-size-1: 1rem;
      --font-size-2: 1.1rem;
      --font-size-3: 1.25rem;
      --font-size-4: 1.5rem;
      --font-size-5: 2rem;
      --font-size-6: 2.5rem;
      --font-size-7: 3rem;
      --font-size-8: 3.5rem;
      --font-size-fluid-0: clamp(.75rem, 2vw, 1rem);
      --font-size-fluid-1: clamp(1rem, 4vw, 1.5rem);
      --font-size-fluid-2: clamp(1.5rem, 6vw, 2.5rem);
      --font-size-fluid-3: clamp(2rem, 9vw, 3.5rem);
      --size-000: -.5rem;
      --size-00: -.25rem;
      --size-1: .25rem;
      --size-2: .5rem;
      --size-3: 1rem;
      --size-4: 1.25rem;
      --size-5: 1.5rem;
      --size-6: 1.75rem;
      --size-7: 2rem;
      --size-8: 3rem;
      --size-9: 4rem;
      --size-10: 5rem;
      --size-11: 7.5rem;
      --size-12: 10rem;
      --size-13: 15rem;
      --size-14: 20rem;
      --size-15: 30rem;
      --size-fluid-1: clamp(.5rem, 1vw, 1rem);
      --size-fluid-2: clamp(1rem, 2vw, 1.5rem);
      --size-fluid-3: clamp(1.5rem, 3vw, 2rem);
      --size-fluid-4: clamp(2rem, 4vw, 3rem);
      --size-fluid-5: clamp(4rem, 5vw, 5rem);
      --size-fluid-6: clamp(5rem, 7vw, 7.5rem);
      --size-fluid-7: clamp(7.5rem, 10vw, 10rem);
      --size-fluid-8: clamp(10rem, 20vw, 15rem);
      --size-fluid-9: clamp(15rem, 30vw, 20rem);
      --size-fluid-10: clamp(20rem, 40vw, 30rem);
      --size-content-1: 20ch;
      --size-content-2: 45ch;
      --size-content-3: 60ch;
      --size-header-1: 20ch;
      --size-header-2: 25ch;
      --size-header-3: 35ch;
      --size-xxs: 240px;
      --size-xs: 360px;
      --size-sm: 480px;
      --size-md: 768px;
      --size-lg: 1024px;
      --size-xl: 1440px;
      --size-xxl: 1920px;
      --ease-1: cubic-bezier(.25, 0, .5, 1);
      --ease-2: cubic-bezier(.25, 0, .4, 1);
      --ease-3: cubic-bezier(.25, 0, .3, 1);
      --ease-4: cubic-bezier(.25, 0, .2, 1);
      --ease-5: cubic-bezier(.25, 0, .1, 1);
      --ease-in-1: cubic-bezier(.25, 0, 1, 1);
      --ease-in-2: cubic-bezier(.50, 0, 1, 1);
      --ease-in-3: cubic-bezier(.70, 0, 1, 1);
      --ease-in-4: cubic-bezier(.90, 0, 1, 1);
      --ease-in-5: cubic-bezier(1, 0, 1, 1);
      --ease-out-1: cubic-bezier(0, 0, .75, 1);
      --ease-out-2: cubic-bezier(0, 0, .50, 1);
      --ease-out-3: cubic-bezier(0, 0, .3, 1);
      --ease-out-4: cubic-bezier(0, 0, .1, 1);
      --ease-out-5: cubic-bezier(0, 0, 0, 1);
      --ease-in-out-1: cubic-bezier(.1, 0, .9, 1);
      --ease-in-out-2: cubic-bezier(.3, 0, .7, 1);
      --ease-in-out-3: cubic-bezier(.5, 0, .5, 1);
      --ease-in-out-4: cubic-bezier(.7, 0, .3, 1);
      --ease-in-out-5: cubic-bezier(.9, 0, .1, 1);
      --ease-elastic-1: cubic-bezier(.5, .75, .75, 1.25);
      --ease-elastic-2: cubic-bezier(.5, 1, .75, 1.25);
      --ease-elastic-3: cubic-bezier(.5, 1.25, .75, 1.25);
      --ease-elastic-4: cubic-bezier(.5, 1.5, .75, 1.25);
      --ease-elastic-5: cubic-bezier(.5, 1.75, .75, 1.25);
      --ease-squish-1: cubic-bezier(.5, -.1, .1, 1.5);
      --ease-squish-2: cubic-bezier(.5, -.3, .1, 1.5);
      --ease-squish-3: cubic-bezier(.5, -.5, .1, 1.5);
      --ease-squish-4: cubic-bezier(.5, -.7, .1, 1.5);
      --ease-squish-5: cubic-bezier(.5, -.9, .1, 1.5);
      --ease-step-1: steps(2);
      --ease-step-2: steps(3);
      --ease-step-3: steps(4);
      --ease-step-4: steps(7);
      --ease-step-5: steps(10);
      --layer-1: 1;
      --layer-2: 2;
      --layer-3: 3;
      --layer-4: 4;
      --layer-5: 5;
      --layer-important: 2147483647;
      --shadow-color: 220 3% 15%;
      --shadow-strength: 1%;
      --shadow-1: 0 1px 2px -1px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));
      --shadow-2: 0 3px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 7px 14px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%));
      --shadow-3: 0 -1px 3px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)), 0 1px 2px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)), 0 2px 5px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)), 0 4px 12px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)), 0 12px 15px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));
      --shadow-4: 0 -2px 5px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)), 0 1px 1px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 2px 2px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 5px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)), 0 9px 9px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)), 0 16px 16px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 6%));
      --shadow-5: 0 -1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)), 0 2px 1px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 5px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 10px 10px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)), 0 20px 20px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)), 0 40px 40px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));
      --shadow-6: 0 -1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)), 0 3px 2px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 7px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)), 0 12px 10px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)), 0 22px 18px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)), 0 41px 33px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 6%)), 0 100px 80px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));
      --inner-shadow-0: inset 0 0 0 1px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));
      --inner-shadow-1: inset 0 1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));
      --inner-shadow-2: inset 0 1px 4px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));
      --inner-shadow-3: inset 0 2px 8px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));
      --inner-shadow-4: inset 0 2px 14px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));
      --ratio-square: 1;
      --ratio-landscape: 4/3;
      --ratio-portrait: 3/4;
      --ratio-widescreen: 16/9;
      --ratio-ultrawide: 18/5;
      --ratio-golden: 1.6180/1;
      --gray-0: #f8f9fa;
      --gray-1: #f1f3f5;
      --gray-2: #e9ecef;
      --gray-3: #dee2e6;
      --gray-4: #ced4da;
      --gray-5: #adb5bd;
      --gray-6: #868e96;
      --gray-7: #495057;
      --gray-8: #343a40;
      --gray-9: #212529;
      --red-0: #fff5f5;
      --red-1: #ffe3e3;
      --red-2: #ffc9c9;
      --red-3: #ffa8a8;
      --red-4: #ff8787;
      --red-5: #ff6b6b;
      --red-6: #fa5252;
      --red-7: #f03e3e;
      --red-8: #e03131;
      --red-9: #c92a2a;
      --pink-0: #fff0f6;
      --pink-1: #ffdeeb;
      --pink-2: #fcc2d7;
      --pink-3: #faa2c1;
      --pink-4: #f783ac;
      --pink-5: #f06595;
      --pink-6: #e64980;
      --pink-7: #d6336c;
      --pink-8: #c2255c;
      --pink-9: #a61e4d;
      --grape-0: #f8f0fc;
      --grape-1: #f3d9fa;
      --grape-2: #eebefa;
      --grape-3: #e599f7;
      --grape-4: #da77f2;
      --grape-5: #cc5de8;
      --grape-6: #be4bdb;
      --grape-7: #ae3ec9;
      --grape-8: #9c36b5;
      --grape-9: #862e9c;
      --violet-0: #f3f0ff;
      --violet-1: #e5dbff;
      --violet-2: #d0bfff;
      --violet-3: #b197fc;
      --violet-4: #9775fa;
      --violet-5: #845ef7;
      --violet-6: #7950f2;
      --violet-7: #7048e8;
      --violet-8: #6741d9;
      --violet-9: #5f3dc4;
      --indigo-0: #edf2ff;
      --indigo-1: #dbe4ff;
      --indigo-2: #bac8ff;
      --indigo-3: #91a7ff;
      --indigo-4: #748ffc;
      --indigo-5: #5c7cfa;
      --indigo-6: #4c6ef5;
      --indigo-7: #4263eb;
      --indigo-8: #3b5bdb;
      --indigo-9: #364fc7;
      --blue-0: #e7f5ff;
      --blue-1: #d0ebff;
      --blue-2: #a5d8ff;
      --blue-3: #74c0fc;
      --blue-4: #4dabf7;
      --blue-5: #339af0;
      --blue-6: #228be6;
      --blue-7: #1c7ed6;
      --blue-8: #1971c2;
      --blue-9: #1864ab;
      --cyan-0: #e3fafc;
      --cyan-1: #c5f6fa;
      --cyan-2: #99e9f2;
      --cyan-3: #66d9e8;
      --cyan-4: #3bc9db;
      --cyan-5: #22b8cf;
      --cyan-6: #15aabf;
      --cyan-7: #1098ad;
      --cyan-8: #0c8599;
      --cyan-9: #0b7285;
      --teal-0: #e6fcf5;
      --teal-1: #c3fae8;
      --teal-2: #96f2d7;
      --teal-3: #63e6be;
      --teal-4: #38d9a9;
      --teal-5: #20c997;
      --teal-6: #12b886;
      --teal-7: #0ca678;
      --teal-8: #099268;
      --teal-9: #087f5b;
      --green-0: #ebfbee;
      --green-1: #d3f9d8;
      --green-2: #b2f2bb;
      --green-3: #8ce99a;
      --green-4: #69db7c;
      --green-5: #51cf66;
      --green-6: #40c057;
      --green-7: #37b24d;
      --green-8: #2f9e44;
      --green-9: #2b8a3e;
      --lime-0: #f4fce3;
      --lime-1: #e9fac8;
      --lime-2: #d8f5a2;
      --lime-3: #c0eb75;
      --lime-4: #a9e34b;
      --lime-5: #94d82d;
      --lime-6: #82c91e;
      --lime-7: #74b816;
      --lime-8: #66a80f;
      --lime-9: #5c940d;
      --yellow-0: #fff9db;
      --yellow-1: #fff3bf;
      --yellow-2: #ffec99;
      --yellow-3: #ffe066;
      --yellow-4: #ffd43b;
      --yellow-5: #fcc419;
      --yellow-6: #fab005;
      --yellow-7: #f59f00;
      --yellow-8: #f08c00;
      --yellow-9: #e67700;
      --orange-0: #fff4e6;
      --orange-1: #ffe8cc;
      --orange-2: #ffd8a8;
      --orange-3: #ffc078;
      --orange-4: #ffa94d;
      --orange-5: #ff922b;
      --orange-6: #fd7e14;
      --orange-7: #f76707;
      --orange-8: #e8590c;
      --orange-9: #d9480f;
      --gradient-1: linear-gradient(to bottom right, #1f005c, #5b0060, #870160, #ac255e, #ca485c, #e16b5c, #f39060, #ffb56b);
      --gradient-2: linear-gradient(to bottom right, #48005c, #8300e2, #a269ff);
      --gradient-3: radial-gradient(circle at top right, #0ff, rgba(0, 255, 255, 0)), radial-gradient(circle at bottom left, #ff1492, rgba(255, 20, 146, 0));
      --gradient-4: linear-gradient(to bottom right, #00f5a0, #00d9f5);
      --gradient-5: conic-gradient(from -270deg at 75%, at 110%, #f0f, #fffaf0);
      --gradient-5: conic-gradient(from -270deg at 75% 110%, #f0f, #fffaf0);
      --gradient-6: conic-gradient(from -90deg at top left, #000, #fff);
      --gradient-7: linear-gradient(to bottom right, #72c6ef, #004e8f);
      --gradient-8: conic-gradient(from 90deg at 50%, at 0%, #111, 50%, #222, #111);
      --gradient-8: conic-gradient(from 90deg at 50% 0%, #111, 50%, #222, #111);
      --gradient-9: conic-gradient(from .5turn at bottom center, #add8e6, #fff);
      --gradient-10: conic-gradient(from 90deg at 40%, at -25%, gold, #f79d03, #ee6907, #e6390a, #de0d0d, #d61039, #cf1261, #c71585, #cf1261, #d61039, #de0d0d, #ee6907, #f79d03, gold, gold, gold);
      --gradient-10: conic-gradient(from 90deg at 40% -25%, gold, #f79d03, #ee6907, #e6390a, #de0d0d, #d61039, #cf1261, #c71585, #cf1261, #d61039, #de0d0d, #ee6907, #f79d03, gold, gold, gold);
      --gradient-11: conic-gradient(at bottom left, #ff1493, cyan);
      --gradient-12: conic-gradient(from 90deg at 25%, at -10%, #ff4500, #d3f340, #7bee85, #afeeee, #7bee85);
      --gradient-12: conic-gradient(from 90deg at 25% -10%, #ff4500, #d3f340, #7bee85, #afeeee, #7bee85);
      --gradient-13: radial-gradient(circle at 50%, at 200%, #000142, #3b0083, #b300c3, #ff059f, #ff4661, #ffad86, #fff3c7);
      --gradient-13: radial-gradient(circle at 50% 200%, #000142, #3b0083, #b300c3, #ff059f, #ff4661, #ffad86, #fff3c7);
      --gradient-14: conic-gradient(at top right, lime, cyan);
      --gradient-15: linear-gradient(to bottom right, #c7d2fe, #fecaca, #fef3c7);
      --gradient-16: radial-gradient(circle at 50%, at -250%, #374151, #111827, #000);
      --gradient-16: radial-gradient(circle at 50% -250%, #374151, #111827, #000);
      --gradient-17: conic-gradient(from -90deg at 50%, at -25%, blue, #8a2be2);
      --gradient-17: conic-gradient(from -90deg at 50% -25%, blue, #8a2be2);
      --gradient-18: linear-gradient(0deg, rgba(255, 0, 0, 0.8), rgba(255, 0, 0, 0) 75%), linear-gradient(60deg, rgba(255, 255, 0, 0.8), rgba(255, 255, 0, 0) 75%), linear-gradient(120deg, rgba(0, 255, 0, 0.8), rgba(0, 255, 0, 0) 75%), linear-gradient(180deg, rgba(0, 255, 255, 0.8), rgba(0, 255, 255, 0) 75%), linear-gradient(240deg, rgba(0, 0, 255, 0.8), rgba(0, 0, 255, 0) 75%), linear-gradient(300deg, rgba(255, 0, 255, 0.8), rgba(255, 0, 255, 0) 75%);
      --gradient-19: linear-gradient(to bottom right, #ffe259, #ffa751);
      --gradient-20: conic-gradient(from -135deg at -10% center, orange, #ff7715, #ff522a, #ff3f47, #ff5482, #ff69b4);
      --gradient-21: conic-gradient(from -90deg at 25%, at 115%, red, #f06, #f0c, #c0f, #60f, #00f, #00f, #00f, #00f);
      --gradient-21: conic-gradient(from -90deg at 25% 115%, red, #f06, #f0c, #c0f, #60f, #00f, #00f, #00f, #00f);
      --gradient-22: linear-gradient(to bottom right, #acb6e5, #86fde8);
      --gradient-23: linear-gradient(to bottom right, #536976, #292e49);
      --gradient-24: conic-gradient(from .5turn at 0%, at 0%, #00c476, 10%, #82b0ff, 90%, #00c476);
      --gradient-24: conic-gradient(from .5turn at 0% 0%, #00c476, 10%, #82b0ff, 90%, #00c476);
      --gradient-25: conic-gradient(at 125%, at 50%, #b78cf7, #ff7c94, #ffcf0d, #ff7c94, #b78cf7);
      --gradient-25: conic-gradient(at 125% 50%, #b78cf7, #ff7c94, #ffcf0d, #ff7c94, #b78cf7);
      --gradient-26: linear-gradient(to bottom right, #9796f0, #fbc7d4);
      --gradient-27: conic-gradient(from .5turn at bottom left, #ff1493, #639);
      --gradient-28: conic-gradient(from -90deg at 50%, at 105%, #fff, orchid);
      --gradient-28: conic-gradient(from -90deg at 50% 105%, #fff, orchid);
      --gradient-29: radial-gradient(circle at top right, #bfb3ff, hsl(250 100% 85%/0%)), radial-gradient(circle at bottom left, #86acf9, hsl(220 90% 75%/0%));
      --gradient-30: radial-gradient(circle at top right, #00ff80, rgba(0, 255, 128, 0)), radial-gradient(circle at bottom left, #adffd6, hsl(150 100% 84%/0%));
      --noise-1: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.005' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
      --noise-2: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.05' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
      --noise-3: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.25' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
      --noise-4: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 2056 2056' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
      --noise-5: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 2056 2056' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.75' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
      --noise-filter-1: contrast(300%) brightness(100%);
      --noise-filter-2: contrast(200%) brightness(150%);
      --noise-filter-3: contrast(200%) brightness(250%);
      --noise-filter-4: contrast(200%) brightness(500%);
      --noise-filter-5: contrast(200%) brightness(1000%);
      --animation-fade-in: fade-in .5s var(--ease-3);
      --animation-fade-out: fade-out .5s var(--ease-3);
      --animation-scale-up: scale-up .5s var(--ease-3);
      --animation-scale-down: scale-down .5s var(--ease-3);
      --animation-slide-out-up: slide-out-up .5s var(--ease-3);
      --animation-slide-out-down: slide-out-down .5s var(--ease-3);
      --animation-slide-out-right: slide-out-right .5s var(--ease-3);
      --animation-slide-out-left: slide-out-left .5s var(--ease-3);
      --animation-slide-in-up: slide-in-up .5s var(--ease-3);
      --animation-slide-in-down: slide-in-down .5s var(--ease-3);
      --animation-slide-in-right: slide-in-right .5s var(--ease-3);
      --animation-slide-in-left: slide-in-left .5s var(--ease-3);
      --animation-shake-x: shake-x .75s var(--ease-out-5);
      --animation-shake-y: shake-y .75s var(--ease-out-5);
      --animation-spin: spin 2s linear infinite;
      --animation-ping: ping 5s var(--ease-out-3) infinite;
      --animation-blink: blink 1s var(--ease-out-3) infinite;
      --animation-float: float 3s var(--ease-in-out-3) infinite;
      --animation-bounce: bounce 2s var(--ease-squish-2) infinite;
      --animation-pulse: pulse 2s var(--ease-out-3) infinite;
      --border-size-1: 1px;
      --border-size-2: 2px;
      --border-size-3: 5px;
      --border-size-4: 10px;
      --border-size-5: 25px;
      --radius-1: 2px;
      --radius-2: 5px;
      --radius-3: 1rem;
      --radius-4: 2rem;
      --radius-5: 4rem;
      --radius-6: 8rem;
      --radius-round: 1e5px;
      --radius-blob-1: 30% 70% 70% 30%/53% 30% 70% 47%;
      --radius-blob-2: 53% 47% 34% 66%/63% 46% 54% 37%;
      --radius-blob-3: 37% 63% 56% 44%/49% 56% 44% 51%;
      --radius-blob-4: 63% 37% 37% 63%/43% 37% 63% 57%;
      --radius-blob-5: 49% 51% 48% 52%/57% 44% 56% 43%;
      --radius-conditional-1: clamp(0px, calc(100vw - 100%) * 1e5, var(--radius-1));
      --radius-conditional-2: clamp(0px, calc(100vw - 100%) * 1e5, var(--radius-2));
      --radius-conditional-3: clamp(0px, calc(100vw - 100%) * 1e5, var(--radius-3));
      --radius-conditional-4: clamp(0px, calc(100vw - 100%) * 1e5, var(--radius-4));
      --radius-conditional-5: clamp(0px, calc(100vw - 100%) * 1e5, var(--radius-5));
      --radius-conditional-6: clamp(0px, calc(100vw - 100%) * 1e5, var(--radius-6))
    }

    @media (prefers-color-scheme:dark) {
      :where(html) {
        --shadow-strength: 25%;
        --shadow-color: 220 40% 2%
      }
    }

    @keyframes fade-in {
      to {
        opacity: 1
      }
    }

    @keyframes fade-out {
      to {
        opacity: 0
      }
    }

    @keyframes scale-up {
      to {
        transform: scale(1.25)
      }
    }

    @keyframes scale-down {
      to {
        transform: scale(.75)
      }
    }

    @keyframes slide-out-up {
      to {
        transform: translateY(-100%)
      }
    }

    @keyframes slide-out-down {
      to {
        transform: translateY(100%)
      }
    }

    @keyframes slide-out-right {
      to {
        transform: translateX(100%)
      }
    }

    @keyframes slide-out-left {
      to {
        transform: translateX(-100%)
      }
    }

    @keyframes slide-in-up {
      0% {
        transform: translateY(100%)
      }
    }

    @keyframes slide-in-down {
      0% {
        transform: translateY(-100%)
      }
    }

    @keyframes slide-in-right {
      0% {
        transform: translateX(-100%)
      }
    }

    @keyframes slide-in-left {
      0% {
        transform: translateX(100%)
      }
    }

    @keyframes shake-x {

      0%,
      to {
        transform: translateX(0)
      }

      20% {
        transform: translateX(-5%)
      }

      40% {
        transform: translateX(5%)
      }

      60% {
        transform: translateX(-5%)
      }

      80% {
        transform: translateX(5%)
      }
    }

    @keyframes shake-y {

      0%,
      to {
        transform: translateY(0)
      }

      20% {
        transform: translateY(-5%)
      }

      40% {
        transform: translateY(5%)
      }

      60% {
        transform: translateY(-5%)
      }

      80% {
        transform: translateY(5%)
      }
    }

    @keyframes spin {
      to {
        transform: rotate(1turn)
      }
    }

    @keyframes ping {

      90%,
      to {
        opacity: 0;
        transform: scale(2)
      }
    }

    @keyframes blink {

      0%,
      to {
        opacity: 1
      }

      50% {
        opacity: .5
      }
    }

    @keyframes float {
      50% {
        transform: translateY(-25%)
      }
    }

    @keyframes bounce {
      25% {
        transform: translateY(-20%)
      }

      40% {
        transform: translateY(-3%)
      }

      0%,
      60%,
      to {
        transform: translateY(0)
      }
    }

    @keyframes pulse {
      50% {
        transform: scale(.9)
      }
    }
  }
}



/*-----------------------------------------------------------------------------*\
  # RESET layer
    reset and normalize default browser styles
\*-----------------------------------------------------------------------------*/

@layer reset {
  /*
    1. Use a more-intuitive box-sizing model.
  */
  *, *::before, *::after {
    box-sizing: border-box;
  }
  /*
    2. Remove default margin
  */
  * {
    margin: 0;
  }
  /*
    3. Allow percentage-based heights in the application
  */
  html, body {
    height: 100%;
  }
  /*
    Typographic tweaks!
    4. Add accessible line-height
    5. Improve text rendering
  */
  body {
    line-height: 1.4;
    -webkit-font-smoothing: antialiased;
  }
  /*
    6. Improve media defaults
  */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  /*
    7. Remove built-in form typography styles
  */
  input, button, textarea, select {
    font: revert;
  }
  /*
    8. Avoid text overflows
  */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  /*
    9. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }

  /*
    10. Remove default padding
  */
  ul, ol, li  {
    padding: 0;
  }
}



/*-----------------------------------------------------------------------------*\
  # ELEMENTS layer
    html tags like: headings, p, ul, button...
\*-----------------------------------------------------------------------------*/

@layer elements {
  html {
    font-family: var(--font-sans);
    font-size: var(--font-size-base);
  }
  
  body {
    position: relative;
    display: block;
    width: 100vw;
    height: 100vh;
    font-size: 1.6rem;
    background: radial-gradient(84.79% 50.97% at 50% 85%, rgba(26, 18, 7, 0.96) 0%, #2D353C 100%);
  }

  header {

  }

  nav {

  }

  button {
    padding: .9rem 1.2rem .9rem 1rem;
    border: 1px solid var(--blue-7);
    border-radius: var(--radius-2);
  }

}



/*-----------------------------------------------------------------------------*\
  # LAYOUT layer
    layout objects like: containers, wrappers, rows, columns...
\*-----------------------------------------------------------------------------*/

@layer layout {
  .app {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
  }

  .d-flex {
    display: flex;
  }
  .flex-column {
    flex-direction: column;
  }
  .align-items-center {
    align-items: center;
  }
  .justify-content-center {
    justify-content: center;
  }
  .justify-content-space-between {
    justify-content: space-between;
  }

  .w-28p {
    width: 28%;
  }
  .w-30p {
    width: 30%;
  }

  .col-3 {
    width: 25%;
  }
  .col-4 {
    width: 33.33%;
  }
  .col-8 {
    width: 66.66%;
  }
  .col-9 {
    width: 75%;
  }
  .col-12 {
    width: 100%;
  }

  .p-1 {
    padding: 1rem;
  }
  .p-1-5 {
    padding: 1.5rem;
  }
  .p-2 {
    padding: 2rem;
  }
  .pl-2 {
    padding-left: 2rem;
  }
  .pl-3 {
    padding-left: 3rem;
  }

  .mb-1 {
    margin-bottom: 1rem;
  }
}



/*-----------------------------------------------------------------------------*\
  # OBJECTS layer
    simple reusable patterns that components may inherit,
    like: title, subtitle, icon, link
\*-----------------------------------------------------------------------------*/

@layer objects {

  .header__logo {
    font-size: var(--font-size-6);
    font-weight: var(--font-weight-7);
    color: var(--blue-0);
  }

  .header__logo__span {
    color: var(--blue-3);
    padding-left: var(--size-1);
  }

  .color--white {
    color: #fff;
  }

  .color--gray-5 {
    color: var(--gray-5);
  }

  .text--small {
    font-size: var(--font-size-0);
  }

  .button__txt {
    padding-top: .1rem;
  }

  .button__icon {
    flex: 0 0 auto;
    height: 1.8rem;
  }

  .timer__pause-btn__icon {
    height: 2.4rem;
  }

  .button__icon--mr {
    margin-right: .5em;
  }

  .button__icon--ml {
    margin-left: .5em;
  }

  .board__input {
    position: absolute;
    opacity: 0;
    visibility: hidden;
    clip-path: polygon(0 0);
  }

  .board__checker {
    position: relative;
    background-color: var(--gray-8);
    flex: 1 1 auto;
    height: 100%;
    aspect-ratio: 1;
    border-radius: 100px;
    box-shadow: inset 0 2px 10px 0 hsla(0, 0%, 0%, .7), 0 1px 1px 1px hsla(0, 100%, 100%, .3);
  }

  .board__input:checked ~ .board__checker {
    background-color: var(--yellow-4);
    box-shadow: inset 0 1px 4px 0 hsla(40, 20%, 20%, .5), inset 0 0 0 3px hsla(40, 50%, 100%, .3), 0 1px 1px 1px hsla(0, 100%, 100%, .2);
  }
  .has-yellow :checked ~ .board__checker {
    background-color: var(--yellow-4);
    box-shadow: inset 0 1px 4px 0 hsla(40, 20%, 20%, .5), inset 0 0 0 3px hsla(40, 50%, 100%, .3), 0 1px 1px 1px hsla(0, 100%, 100%, .2);
  }
  .has-red :checked ~ .board__checker {
    background-color: var(--red-7);
    box-shadow: inset 0 1px 4px 0 hsla(10, 90%, 20%, .5), inset 0 0 0 3px hsla(0, 0%, 0%, .07), 0 1px 1px 1px hsla(0, 100%, 100%, .2);
  }

  .players__header--turn {
    margin-bottom: 12vh;
    font-size: var(--font-size-4);
    font-weight: normal;
    text-transform: uppercase;
    letter-spacing: var(--size-1);
    color: var(--blue-1);
  }

  .player__checker {
    width: 12vh;
    height: 12vh;
    border-radius: 100px;
    font-size: var(--font-size-5);
    font-weight: lighter;
    box-shadow: inset 0 0 0 3px hsla(0, 0%, 0%, .05);
  }
  .player__has-turn .player__checker {
    transform: scale(1.2);
    transform-origin: bottom;
  }
  
  .player--yellow {
    background-color: var(--yellow-4);
  }
  .player--red {
    background-color: var(--red-7);
  }

  .player__name {
    font-size: var(--font-size-4);
    font-weight: var(--font-weight-7);
    letter-spacing: .02em;
  }
  .player__id {
    font-size: var(--font-size-2);
    text-transform: uppercase;
    letter-spacing: var(--size-1);
    opacity: .5;
  }

}



/*-----------------------------------------------------------------------------*\
  # COMPONENTS layer
    reusable visual components like: button, input, select, product...
    naming based on visual appearance, not on function or content of the component
\*-----------------------------------------------------------------------------*/

@layer components {
  .header {
    padding: 1.5rem 1rem 1rem 2rem;
  }

  .nav {
    padding: 1rem 2rem 1rem 2rem;
    flex: 1 1 auto;
  }

  .nav__list {
    width: 100%;
    display: flex;
    flex-direction: column;
  }

  .nav__item {
    position: relative;
    display: flex;
    width: auto;
    margin-bottom: var(--size-4);
  }

  .button {
    position: relative;
    display: flex;
    align-items: center;
    flex: 0 0 auto;
    color: var(--blue-0);
    background-color: var(--gray-7);
    font-size: var(--font-size-4);
    text-align: left;
  }

  .board__wrapper {
    position: absolute;
    display: flex;
    align-items: center;
    inset: 0;
    width: 100%;
    padding-left: 2rem;
    transform: translateX(26vw);
    background: var(--gradient-board);
    box-shadow: -10px 0 20px 0 hsla(0, 0%, 0%, .4);
    overflow: hidden;
  }

  .board {
    position: relative;
    width: 106vh;
    max-width: 60vw;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(6, 1fr);
  }

  .board__cell {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1 1 auto;
    aspect-ratio: 1;
    padding: clamp(0.7vmax, 1.4vmin ,1.2vmax);
  }

  .timer__wrapper {
    align-items: stretch;
  }

  .timer {
    padding: .6rem 1.5rem .6rem 2.8rem;
    background-color: var(--gray-7);
    border: 1px solid var(--blue-7);
    border-right: none;
  }

  .timer__time {
    font-size: 2.2rem;
    line-height: 1.2;
  }

  .timer__pause-btn {
    border-radius: 0 var(--radius-2) var(--radius-2) 0;
    min-width: 4.4rem;
  }

  .footer {
    padding: 2rem 2rem 1rem 0;
  }

  .board__players {
    flex: 0 1 20vw;
    color: #fff;
    text-align: center;
  }

  .player {
    margin: 3rem 0;
    opacity: .5;
    transition: opacity .2s ease-in-out;
  }

  .player__has-turn {
    opacity: 1;
  }
}



/*-----------------------------------------------------------------------------*\
  # UTILITIES layer
    helper classes for excepcions like: visibility, opacity, alternative color, size, position...
    to override all other properties. The only layer in wich !important is allowed!
\*-----------------------------------------------------------------------------*/

@layer utilities {
  .is-visible {

  }
  
  .is-hidden {

  }
}



/*-----------------------------------------------------------------------------*\
  # CLASS PARADISE
    Classes here have the highest specificity coefficient and cascading priority.
    Use with caution!
\*-----------------------------------------------------------------------------*/

/* nothing yet */




/*-----------------------------------------------------------------------------*\
  # NAMING CONVENTIONS & GOOD PRACTICES
\*-----------------------------------------------------------------------------*/
/*
  # BEM naming:
      .block { }
      .block__element { }  (element as child part of a block. Like: nav__button, header__logo, top, bottom...)
      .block__element--modifier { }  (modifier as state or attribute of a block. Like: red, visible, small...)

  # BEMIT namespaces:
    Same as BEM, plus adding the initial of layer.
      .l-[name] { }  for layout
      .o-[name] { }  for objects
      .c-[name] { }  for components
      .u-[name] { }  for utilities

  # ID's and Classes for use with Javascript
      .js-[name] { }

  # State classes
      .is-[name] { }
      .has-[name] { }

  # Use expressive and descriptive class names.
  # Don't write selectors with nested classes, if possible.
  # Follow naming conventions.
  # Don't use important!
  # Don't write outside the layers.
  # Don't change the order of the layers.
  # DRY: Don't repeat yourself.
*/




/* End of file app.css */
/* Don't write anything below this line */