@startuml klondike_usecases
left to right direction
actor Player
usecase Start
Player --> Start
usecase Board as "Show board"
usecase Move as "Move combination"
Player --> Move
usecase Resume
Player --> Resume
Start .down.> Board: include
Move .down.> Board: include
@enduml

@startuml klondike_states
state INITIAL as "INITIALXXXXXXXXXXX"
state IN_GAME
state OUT_GAME
state EXIT
state if_finished <<choice>>
state if_resumed <<choice>>

[*] --> INITIAL
INITIAL --> IN_GAME: Start
IN_GAME --> if_finished: Move combination
if_finished --> IN_GAME
if_finished --> OUT_GAME: [finished]
OUT_GAME --> if_resumed: Resume
if_resumed --> INITIAL: [continued]
if_resumed --> EXIT
EXIT --> [*]
@enduml

@startuml Move_usecase
state IN_GAME
state requested as " "
state allowed as " "
state error as " "
state ShowBoard as "Show board"
state winner as " "
state looser as " "
state finished as " "
state last as " "
state is_correct <<choice>>
state is_finished <<choice>>
state is_winner <<choice>>

[*] --> IN_GAME
IN_GAME --> requested: Player requests Move a combination
requested --> allowed: System requests a Moved combination
allowed --> is_correct: Player introduces a Moved combination
is_correct --> ShowBoard
is_correct --> error: [incorrect Moved combination]
note on link 
  MovedCombination.colors.length != 4
  MovedCombination.colors at least one repeated
  MovedCombination.colors at least one != Color.values
end note
error --> last: System shows error
ShowBoard --> is_finished
is_finished --> is_winner: [finished]
note on link
  winner || loser
end note
is_winner --> winner: [winner]
note on link
  result.blacks = 4
end note
is_winner --> looser: [loser]
note on link
  result.blacks < 4 && attempts = 10
end note
is_finished --> last
winner --> finished: System shows winner message
looser --> finished: System shows loser message
last --> [*]: System allows to Move a combination
finished --> [*]: System allows to resume a new game
@enduml

@startuml resume_usecase
state OUT_GAME
state INITIAL
state EXIT
state requested as " "
state allowed as " "

[*] --> OUT_GAME
OUT_GAME --> requested: Player requests to resume a new game
requested --> allowed: System requests to continue
allowed --> INITIAL: Player introduces yes
allowed --> EXIT: Player introduces no
INITIAL --> [*]
EXIT --> [*]
@enduml

@startuml start_usecase
state INITIAL
state IN_GAME
state start as " "
state ShowBoard as "Show board"

[*] --> INITIAL
INITIAL --> start: Player requests to start a new game
start --> ShowBoard: System shows title message
ShowBoard --> IN_GAME: System allows Move combination
IN_GAME --> [*]
@enduml

@startuml show_board_usecase
state attempts_shown as " "
state combinations_shown as " "
[*] --> attempts_shown: System shows attempts
attempts_shown --> combinations_shown: System shows secret combination as "****"
combinations_shown --> [*]: System shows Moved combinations with results
@enduml